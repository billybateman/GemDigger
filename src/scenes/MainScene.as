package scenes {		import data.*;	import objects.*;	import controllers.*;	import scenes.*;	import sounds.*;	import fonts.*;	import effects.*;	import sounds.*;	import text.*;		import flash.display.*;	import flash.events.*;	import flash.utils.*;	import flash.net.*;	import flash.text.*;				import game.net.*;	import game.data.*;	import game.utils.*;	import game.errors.*;	import game.events.*;	import game.scenes.*;	import game.buttons.*;	import game.objects.*;	import game.controllers.*;		public class MainScene extends GameScene {				public static const SCENE_NAME:String = 'MainScene';		public static const MAX_TIME:uint			= 120;		public static const MAX_STEPS:uint			= 10;				private var board:Board=new Board();				public static var newScore:uint;		private var timeBoard:TimeBoard;		private static var scoreBoard:ScoreBoard;					//private var scoreTxt:TextField;		private var MainSceneBackground:MovieClip;				private var step:uint;		private var timeIsUp:Boolean;		private var gameTimer:MainTimer;		private var timeManager:TimeManager;					public function MainScene() {						this.sceneName = MainScene.SCENE_NAME;			super();		}				override protected function initScene():void		{									initTimeBoard();			initScoreBoard();			initTimer();			addChild(board);			board.x=310;			board.y=100;		}				override protected function resetScene():void		{			TraceUtil.addLine( 'MainScene >>> resetScene()' );						this.gameTimer.display( MainScene.MAX_TIME );			this.timeManager.setMaster( MainTimer.MAIN_TIMER, MainScene.MAX_TIME );						this.gameTimer.addEventListener( GameEvent.TIMER_COMPLETE, this.timesUp );								}				override public function activate():void		{			this.timeManager.start();						var myTimer:Timer = new Timer(5000, 1); // 1 second			myTimer.addEventListener(TimerEvent.TIMER, runOnce);			myTimer.start();											}				function runOnce(event:TimerEvent):void {			this.board.setupGems();		}				private function initTimeBoard():void{			this.timeBoard = new TimeBoard();			this.addChild( this.timeBoard );					}				private function initScoreBoard():void{			MainScene.scoreBoard = new ScoreBoard();			addChild( MainScene.scoreBoard );			MainScene.scoreBoard.setScore("0");		}				private function initTimer():void		{			this.timeIsUp = false;						this.gameTimer = new MainTimer();			this.addChild( this.gameTimer );						this.timeManager = new TimeManager();			this.timeManager.addTimer( MainTimer.MAIN_TIMER, this.gameTimer );		}				private function timesUp( event:Event ):void		{			TraceUtil.addLine( 'MainScene timesUp() >>> Time\'s up!' );						this.timeIsUp = true;						GameData.nextScene = SummaryScene.SCENE_NAME;						GameController.sceneManager.startScene( SummaryScene.SCENE_NAME );						if ( GameError.hasError ) return;					}				public static function updateScore(newScore:uint):void		{						MainScene.newScore = MainScene.newScore + newScore;						MainData.totalScore = MainScene.newScore;						MainScene.scoreBoard.setScore(String(MainScene.newScore));						TraceUtil.addLine( 'MainScene updateScore >>> ' + MainScene.newScore );							}			}}