package objects{	import data.*;	import text.*;	import fonts.*;		import game.text.*;	import game.view.*;	import game.utils.*;	import game.controllers.*;		import flash.text.*;	import flash.display.*;	import fl.controls.TextArea; 			public class MainTimer extends GameTimeDisplay	{		public static const MAIN_TIMER:String = 'MainTimer';				private var textTime:TextTime;				private var font:String;		private var format:TextFormat;		private var seconds:uint;						public function MainTimer()		{			this.init();		}		public function getSeconds():uint		{			return this.seconds;		}		public function display( time:uint ):void		{			TraceUtil.addLine( 'CaptureTimer display() time: ' + time );			var minutes:uint = time / TimeManager.SECONDS_IN_MINUTE;			var seconds:uint = time % TimeManager.SECONDS_IN_MINUTE;			this.textTime.setText( String(minutes) ) + ':' + ( String(seconds), false );		}		override public function setTime( time:uint ):void		{			TraceUtil.addLine( 'MainTimer setTime() time: ' + time );			//if ( time != MainData.maxTime ) GameController.soundManager.playSound( MainData.SOUND_CLOCK );			this.seconds = time;			var minutes:uint = time / TimeManager.SECONDS_IN_MINUTE;			var seconds:uint = time % TimeManager.SECONDS_IN_MINUTE;			//this.timerMinutes.display( minutes );			//this.timerSeconds.display( seconds );			this.textTime.setText( String(minutes + ':' + seconds), false );					}		private function init():void		{			this.x = 30;			this.y = 225;						this.textTime = new TextTime();			this.addChild( this.textTime );								}	}}